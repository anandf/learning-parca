apiVersion: apps/v1
kind: Deployment
metadata:
  name: parca
  namespace: parca
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: observability
      app.kubernetes.io/instance: parca
      app.kubernetes.io/name: parca
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: observability
        app.kubernetes.io/instance: parca
        app.kubernetes.io/name: parca
        app.kubernetes.io/version: v0.19.0
    spec:
      containers:
      - args:
        - /parca
        - --http-address=:7070
        - --config-path=/etc/parca/parca.yaml
        - --log-level=info
        - --cors-allowed-origins=*
        - --debuginfod-upstream-servers=debuginfod.systemtap.org
        - --debuginfod-http-request-timeout=5m
        image: ghcr.io/parca-dev/parca:v0.19.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /grpc_health_probe
            - -v
            - -addr=:7070
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: parca
        ports:
        - containerPort: 7070
          name: http
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /grpc_health_probe
            - -v
            - -addr=:7070
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/parca
          name: config
        - mountPath: /var/lib/parca
          name: data
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: parca
      serviceAccountName: parca
      terminationGracePeriodSeconds: 120
      volumes:
      - configMap:
          defaultMode: 420
          name: parca
        name: config
      - name: data
        persistentVolumeClaim:
          claimName: parca-data
